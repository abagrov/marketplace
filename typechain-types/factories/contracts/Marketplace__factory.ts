/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc1155Addr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "topBidderSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidsNum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "topBidder",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.AuctionItem",
        name: "auction",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "AuctionCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "topBidderSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidsNum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "topBidder",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.AuctionItem",
        name: "auction",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "topBidderSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidsNum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "topBidder",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.AuctionItem",
        name: "auction",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "AuctionFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "topBidderSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidsNum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "topBidder",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.AuctionItem",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "BidMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "ItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Marketplace.ContractType",
            name: "contractType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInAuction",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Marketplace.MarketplaceItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "ItemUnlisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "cancelAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "itemMetadataUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum Marketplace.ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createItem",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "finishAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "listItemOnAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "makeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003059380380620030598339818101604052810190620000379190620000d8565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000167565b600081519050620000d2816200014d565b92915050565b60008060408385031215620000ec57600080fd5b6000620000fc85828601620000c1565b92505060206200010f85828601620000c1565b9150509250929050565b600062000126826200012d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001588162000119565b81146200016457600080fd5b50565b612ee280620001776000396000f3fe60806040526004361061009c5760003560e01c8063943eb7ed11610064578063943eb7ed1461017557806396b5a755146101b2578063bc197c81146101db578063cf266ed014610218578063e7fb74c714610241578063f23a6e611461025d5761009c565b806301ffc9a7146100a1578063175b2304146100de5780632ce38190146100fa57806340e58ee514610123578063780ebc541461014c575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190611de9565b61029a565b6040516100d5919061247d565b60405180910390f35b6100f860048036038101906100f39190611eb9565b610314565b005b34801561010657600080fd5b50610121600480360381019061011c9190611eb9565b61058b565b005b34801561012f57600080fd5b5061014a60048036038101906101459190611eb9565b61070e565b005b34801561015857600080fd5b50610173600480360381019061016e9190611eb9565b61082d565b005b34801561018157600080fd5b5061019c60048036038101906101979190611e12565b610ab6565b6040516101a99190612704565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d49190611eb9565b610f5b565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190611c9b565b611256565b60405161020f9190612498565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190611eb9565b61126b565b005b61025b60048036038101906102569190611eb9565b6115d8565b005b34801561026957600080fd5b50610284600480360381019061027f9190611d5a565b6119aa565b6040516102919190612498565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061030d575061030c826119bf565b5b9050919050565b6004600082815260200190815260200160002060040160169054906101000a900460ff16610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90612615565b60405180910390fd5b600560008281526020019081526020016000206000015434116103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690612655565b60405180910390fd5b60006005600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060056000848152602001908152602001600020600001549050336005600085815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460056000858152602001908152602001600020600001819055506005600084815260200190815260200160002060010160008154809291906104bc90612ae4565b9190505550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461053d578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561053b573d6000803e3d6000fd5b505b7febba3ac365fec78f0b5c51b460a0845100ea6c24cfa243082db5ac668f8a11246005600085815260200190815260200160002060405161057e9190612675565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461062f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062690612595565b60405180910390fd5b6004600082815260200190815260200160002060040160169054906101000a900460ff1615610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90612555565b60405180910390fd5b60016004600083815260200190815260200160002060040160156101000a81548160ff0219169083151502179055507f1a609a40d891a23c3cc5eb443e012839e064f64b87e8d0356855e56c9f23e6456004600083815260200190815260200160002060405161070391906126e2565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a9906125d5565b60405180910390fd5b60006004600083815260200190815260200160002060040160156101000a81548160ff0219169083151502179055507ff6ce7af161339019ee6fddf52ca34c3cd5e33c0912c3b9d6adc78023dce9fc726004600083815260200190815260200160002060405161082291906126e2565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c8906125d5565b60405180910390fd5b6004600082815260200190815260200160002060040160169054906101000a900460ff1615610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90612515565b60405180910390fd5b60016004600083815260200190815260200160002060040160166101000a81548160ff02191690831515021790555060006004600083815260200190815260200160002060040160156101000a81548160ff021916908315150217905550604051806080016040528060008152602001600081526020016203f480426109bb9190612844565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152506005600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f6e2f2c4135bf136fdb9351ee8189f10faa6dc005f17684727e2aa6a3376ced376005600083815260200190815260200160002060046000848152602001908152602001600020604051610aab929190612690565b60405180910390a150565b60006001821015610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906124f5565b60405180910390fd5b60005490506000806001811115610b3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b846001811115610b75577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610c725760018314610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb5906124d5565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d85d3d27886040518263ffffffff1660e01b8152600401610c1991906124b3565b602060405180830381600087803b158015610c3357600080fd5b505af1158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b9190611ee2565b9050610d24565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377097fc884896040518363ffffffff1660e01b8152600401610ccf92919061271f565b602060405180830381600087803b158015610ce957600080fd5b505af1158015610cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d219190611ee2565b90505b6040518061012001604052808381526020018281526020018781526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001856001811115610d9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160001515815260200160001515815260200186815250600460008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690836001811115610e8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060c08201518160040160156101000a81548160ff02191690831515021790555060e08201518160040160166101000a81548160ff021916908315150217905550610100820151816005019080519060200190610eed929190611a29565b50905050600080815480929190610f0390612ae4565b91905055507f13f49c9eccf7fd7e8fd9a990447eb13ca3ea666c3669b907715af344f2d9874e60046000848152602001908152602001600020604051610f4991906126e2565b60405180910390a15095945050505050565b6004600082815260200190815260200160002060040160169054906101000a900460ff16610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb590612615565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611059906125d5565b60405180910390fd5b60056000828152602001908152602001600020600201544210156110bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b290612535565b60405180910390fd5b6002600560008381526020019081526020016000206001015410611114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110b906125b5565b60405180910390fd5b60006004600083815260200190815260200160002060040160166101000a81548160ff0219169083151502179055506000600560008381526020019081526020016000206001015411156111f6576005600082815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60056000848152602001908152602001600020600001549081150290604051600060405180830381858888f193505050501580156111f4573d6000803e3d6000fd5b505b7ff8ff3c56a12392dcda42331a235fd51d7f1b6c8ea4e0c768007bceb5cb4e08a4600560008381526020019081526020016000206004600084815260200190815260200160002060405161124b929190612690565b60405180910390a150565b600063bc197c8160e01b905095945050505050565b6004600082815260200190815260200160002060040160169054906101000a900460ff166112ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c590612615565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611372576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611369906125d5565b60405180910390fd5b60056000828152602001908152602001600020600201544210156113cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c290612535565b60405180910390fd5b600260056000838152602001908152602001600020600101541015611425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141c90612575565b60405180910390fd5b60006004600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006004600084815260200190815260200160002060040160166101000a81548160ff0219169083151502179055506005600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166108fc60056000858152602001908152602001600020600001549081150290604051600060405180830381858888f19350505050158015611576573d6000803e3d6000fd5b507f93c6566e06c261efb0f1259f15b9de36c247dd28066819609a7fa02b0624a13b60056000848152602001908152602001600020600460008581526020019081526020016000206040516115cc929190612690565b60405180910390a15050565b60006004600083815260200190815260200160002060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff1660018111156116c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156116fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016004820160159054906101000a900460ff161515151581526020016004820160169054906101000a900460ff16151515158152602001600582018054611744906129ff565b80601f0160208091040260200160405190810160405280929190818152602001828054611770906129ff565b80156117bd5780601f10611792576101008083540402835291602001916117bd565b820191906000526020600020905b8154815290600101906020018083116117a057829003601f168201915b50505050508152505090508060c0015161180c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611803906125f5565b60405180910390fd5b8060400151341015611853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184a90612635565b60405180910390fd5b80604001513411156118b6573373ffffffffffffffffffffffffffffffffffffffff166108fc826040015134611889919061289a565b9081150290604051600060405180830381858888f193505050501580156118b4573d6000803e3d6000fd5b505b806080015173ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f19350505050158015611904573d6000803e3d6000fd5b5060008160800151905033826080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008260c00190151590811515815250508073ffffffffffffffffffffffffffffffffffffffff167f83a7fa022b736db9bc5e9d40388789c04440cbb221b8743933d6aea77eb985ab8360405161199d91906126c0565b60405180910390a2505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b828054611a35906129ff565b90600052602060002090601f016020900481019282611a575760008555611a9e565b82601f10611a7057805160ff1916838001178555611a9e565b82800160010185558215611a9e579182015b82811115611a9d578251825591602001919060010190611a82565b5b509050611aab9190611aaf565b5090565b5b80821115611ac8576000816000905550600101611ab0565b5090565b6000611adf611ada84612774565b61274f565b90508083825260208201905082856020860282011115611afe57600080fd5b60005b85811015611b2e5781611b148882611c71565b845260208401935060208301925050600181019050611b01565b5050509392505050565b6000611b4b611b46846127a0565b61274f565b905082815260208101848484011115611b6357600080fd5b611b6e8482856129bd565b509392505050565b6000611b89611b84846127d1565b61274f565b905082815260208101848484011115611ba157600080fd5b611bac8482856129bd565b509392505050565b600081359050611bc381612e57565b92915050565b600082601f830112611bda57600080fd5b8135611bea848260208601611acc565b91505092915050565b600081359050611c0281612e6e565b92915050565b600082601f830112611c1957600080fd5b8135611c29848260208601611b38565b91505092915050565b600081359050611c4181612e85565b92915050565b600082601f830112611c5857600080fd5b8135611c68848260208601611b76565b91505092915050565b600081359050611c8081612e95565b92915050565b600081519050611c9581612e95565b92915050565b600080600080600060a08688031215611cb357600080fd5b6000611cc188828901611bb4565b9550506020611cd288828901611bb4565b945050604086013567ffffffffffffffff811115611cef57600080fd5b611cfb88828901611bc9565b935050606086013567ffffffffffffffff811115611d1857600080fd5b611d2488828901611bc9565b925050608086013567ffffffffffffffff811115611d4157600080fd5b611d4d88828901611c08565b9150509295509295909350565b600080600080600060a08688031215611d7257600080fd5b6000611d8088828901611bb4565b9550506020611d9188828901611bb4565b9450506040611da288828901611c71565b9350506060611db388828901611c71565b925050608086013567ffffffffffffffff811115611dd057600080fd5b611ddc88828901611c08565b9150509295509295909350565b600060208284031215611dfb57600080fd5b6000611e0984828501611bf3565b91505092915050565b600080600080600060a08688031215611e2a57600080fd5b600086013567ffffffffffffffff811115611e4457600080fd5b611e5088828901611c47565b9550506020611e6188828901611c71565b945050604086013567ffffffffffffffff811115611e7e57600080fd5b611e8a88828901611c47565b9350506060611e9b88828901611c32565b9250506080611eac88828901611c71565b9150509295509295909350565b600060208284031215611ecb57600080fd5b6000611ed984828501611c71565b91505092915050565b600060208284031215611ef457600080fd5b6000611f0284828501611c86565b91505092915050565b611f1481612924565b82525050565b611f2381612936565b82525050565b611f3281612936565b82525050565b611f4181612942565b82525050565b611f50816129ab565b82525050565b6000611f6182612817565b611f6b8185612822565b9350611f7b8185602086016129cc565b611f8481612be9565b840191505092915050565b6000611f9a82612817565b611fa48185612833565b9350611fb48185602086016129cc565b611fbd81612be9565b840191505092915050565b60008154611fd5816129ff565b611fdf8186612822565b94506001821660008114611ffa576001811461200c5761203f565b60ff198316865260208601935061203f565b61201585612802565b60005b8381101561203757815481890152600182019150602081019050612018565b808801955050505b50505092915050565b6000612055601d83612833565b915061206082612c2e565b602082019050919050565b6000612078600e83612833565b915061208382612c57565b602082019050919050565b600061209b601883612833565b91506120a682612c80565b602082019050919050565b60006120be601c83612833565b91506120c982612ca9565b602082019050919050565b60006120e1601b83612833565b91506120ec82612cd2565b602082019050919050565b6000612104601083612833565b915061210f82612cfb565b602082019050919050565b6000612127601983612833565b915061213282612d24565b602082019050919050565b600061214a602083612833565b915061215582612d4d565b602082019050919050565b600061216d601783612833565b915061217882612d76565b602082019050919050565b6000612190601483612833565b915061219b82612d9f565b602082019050919050565b60006121b3601983612833565b91506121be82612dc8565b602082019050919050565b60006121d6601783612833565b91506121e182612df1565b602082019050919050565b60006121f9600f83612833565b915061220482612e1a565b602082019050919050565b60808201600080830154905061222481612a4b565b612231600086018261245f565b506001830154905061224281612a4b565b61224f602086018261245f565b506002830154905061226081612a4b565b61226d604086018261245f565b506003830154905061227e81612a31565b61228b6060860182611f0b565b5050505050565b6000610120830160008301516122ab600086018261245f565b5060208301516122be602086018261245f565b5060408301516122d1604086018261245f565b5060608301516122e4606086018261245f565b5060808301516122f76080860182611f0b565b5060a083015161230a60a0860182611f47565b5060c083015161231d60c0860182611f1a565b5060e083015161233060e0860182611f1a565b5061010083015184820361010086015261234a8282611f56565b9150508091505092915050565b60006101208301600080840154905061236f81612a4b565b61237c600087018261245f565b506001840154905061238d81612a4b565b61239a602087018261245f565b50600284015490506123ab81612a4b565b6123b8604087018261245f565b50600384015490506123c981612a4b565b6123d6606087018261245f565b50600484015490506123e781612a31565b6123f46080870182611f0b565b506123fe81612a65565b61240b60a0870182611f47565b5061241581612a7f565b61242260c0870182611f1a565b5061242c81612a99565b61243960e0870182611f1a565b50600584018583036101008701526124518382611fc8565b925050819250505092915050565b612468816129a1565b82525050565b612477816129a1565b82525050565b60006020820190506124926000830184611f29565b92915050565b60006020820190506124ad6000830184611f38565b92915050565b600060208201905081810360008301526124cd8184611f8f565b905092915050565b600060208201905081810360008301526124ee81612048565b9050919050565b6000602082019050818103600083015261250e8161206b565b9050919050565b6000602082019050818103600083015261252e8161208e565b9050919050565b6000602082019050818103600083015261254e816120b1565b9050919050565b6000602082019050818103600083015261256e816120d4565b9050919050565b6000602082019050818103600083015261258e816120f7565b9050919050565b600060208201905081810360008301526125ae8161211a565b9050919050565b600060208201905081810360008301526125ce8161213d565b9050919050565b600060208201905081810360008301526125ee81612160565b9050919050565b6000602082019050818103600083015261260e81612183565b9050919050565b6000602082019050818103600083015261262e816121a6565b9050919050565b6000602082019050818103600083015261264e816121c9565b9050919050565b6000602082019050818103600083015261266e816121ec565b9050919050565b600060808201905061268a600083018461220f565b92915050565b600060a0820190506126a5600083018561220f565b81810360808301526126b78184612357565b90509392505050565b600060208201905081810360008301526126da8184612292565b905092915050565b600060208201905081810360008301526126fc8184612357565b905092915050565b6000602082019050612719600083018461246e565b92915050565b6000604082019050612734600083018561246e565b81810360208301526127468184611f8f565b90509392505050565b600061275961276a565b90506127658282612ab3565b919050565b6000604051905090565b600067ffffffffffffffff82111561278f5761278e612bba565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156127bb576127ba612bba565b5b6127c482612be9565b9050602081019050919050565b600067ffffffffffffffff8211156127ec576127eb612bba565b5b6127f582612be9565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061284f826129a1565b915061285a836129a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561288f5761288e612b2d565b5b828201905092915050565b60006128a5826129a1565b91506128b0836129a1565b9250828210156128c3576128c2612b2d565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b600060ff82169050919050565b6000819050919050565b600061291d82612981565b9050919050565b600061292f82612981565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600081905061297c82612e43565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006129b68261296e565b9050919050565b82818337600083830152505050565b60005b838110156129ea5780820151818401526020810190506129cf565b838111156129f9576000848401525b50505050565b60006002820490506001821680612a1757607f821691505b60208210811415612a2b57612a2a612b8b565b5b50919050565b6000612a44612a3f83612bfa565b6128ce565b9050919050565b6000612a5e612a5983612bfa565b612908565b9050919050565b6000612a78612a7383612c07565b6128fb565b9050919050565b6000612a92612a8d83612c14565b6128ee565b9050919050565b6000612aac612aa783612c21565b6128ee565b9050919050565b612abc82612be9565b810181811067ffffffffffffffff82111715612adb57612ada612bba565b5b80604052505050565b6000612aef826129a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b2257612b21612b2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160001c9050919050565b60008160a01c9050919050565b60008160a81c9050919050565b60008160b01c9050919050565b7f45726337323120646f65736e277420737570706f727420616d6f756e74000000600082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f4974656d20616c7265616479206f6e2061756374696f6e2e0000000000000000600082015250565b7f41756374696f6e206973206e6f742066696e6973686564207965742e00000000600082015250565b7f4974656d20616c726561647920697320696e2061756374696f6e2e0000000000600082015250565b7f546f6f206c6f7720626964646572732e00000000000000000000000000000000600082015250565b7f4f6e6c79206f776e65722063616e206c697374206974656d2e00000000000000600082015250565b7f546f6f206d616e79206269647320746f2063616e63656c2061756374696f6e2e600082015250565b7f4f6e6c79206f776e65722063616e20646f20746861742e000000000000000000600082015250565b7f4974656d20697320756e617661696c61626c652e000000000000000000000000600082015250565b7f41756374696f6e20616c72656164792066696e69736865642e00000000000000600082015250565b7f496e76616c6964207061796d656e7420616d6f756e742e000000000000000000600082015250565b7f42696420697320746f6f206c6f772e0000000000000000000000000000000000600082015250565b60028110612e5457612e53612b5c565b5b50565b612e6081612912565b8114612e6b57600080fd5b50565b612e7781612942565b8114612e8257600080fd5b50565b60028110612e9257600080fd5b50565b612e9e816129a1565b8114612ea957600080fd5b5056fea26469706673582212203afc17519f9fdcb60c27ce23488d32fc4babfe03d11c47f46e13c0a842a3cc2a64736f6c63430008040033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc721Addr: string,
    erc1155Addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(
      erc721Addr,
      erc1155Addr,
      overrides || {}
    ) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    erc721Addr: string,
    erc1155Addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc721Addr, erc1155Addr, overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
